#!groovy

pipeline {
    agent any
    environment {
        IMG_NAME = "docs"
        VERSION = "0.1.0"
    }
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage("Build Image") {
            steps {
                sh "cd mkdocs-on-kubernets-nginx/ && docker build -t ${IMG_NAME}:${VERSION} -f Dockerfile ."
            }
        }
        stage("Run") {
            steps {
                sh "docker run -d --rm --name ${IMG_NAME} ${IMG_NAME}:${VERSION}"
            }
        }
        stage("Test HTTP") {
            steps {
                script {
                    final String url = "http://localhost:8080"

                    final def (String response, int code) =
                        sh(script: "curl -s -w '\\n%{response_code}' $url", returnStdout: true)
                            .trim()
                            .tokenize("\n")

                        echo "HTTP response status code: $code"

                        if (code == 200) {
                            echo response
                            sh "exit 0"
                        }

                    sh "exit 1"
                }
            }
        }
    }
    post {
        // Clean after build
        always {
            cleanWs(cleanWhenNotBuilt: false,
                    deleteDirs: true,
                    disableDeferredWipeout: true,
                    notFailBuild: true,
                    patterns: [[pattern: '.gitignore', type: 'INCLUDE'],
                            [pattern: '.propsfile', type: 'EXCLUDE']])
        }
    }
}